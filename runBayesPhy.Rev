### ANALYZE MULTIPLEXED AMPLICON SEQUENCING DATA FOR PEPEROMIA\

# IMPORT DATA ==============
#fileNames <- listFiles("/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data/alignments")
#fileNames <- listFiles("/home/junyinglim/alignments")
# n_data_subsets <- fileNames.size()
# for (i in 1:n_data_subsets) {
#     data[i] = readDiscreteCharacterData(fileNames[i])
# }

stem = "bayes_nonclock"
#data = readDiscreteCharacterData("/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data/concatAlign_310818.phy")
data = readDiscreteCharacterData("/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data/pepPhyloRuns/pep_130618/concatAlign_130618.phy")


#n_species <- data[1].ntaxa()
n_species <- data.ntaxa()
n_branches <- 2 * n_species - 3
taxa <- data.taxa()

mvi = 0
mni = 0

## CONCATENATE ALIGNMENTS ==============
# This takes a while
# concat = data[1]
# for(i in 2:n_data_subsets){
#     print(i)
#     concat = concatenate(concat, data[i])    
# }

## DEFINE SUBSTITUTION MODEL ==============
# Exchangeability rates
er_prior <- v(1,1,1,1,1,1)
er ~ dnDirichlet(er_prior)
moves[++mvi] = mvSimplexElementScale(er, alpha=10, tune=true, weight=2) 

# Stationary frequencies
pi_prior <- v(1,1,1,1)
pi ~ dnDirichlet(pi_prior)
moves[++mvi] = mvSimplexElementScale(pi, alpha = 10, tune=true, weight=2)

Q := fnGTR(er, pi)

# Gamma parameter
alpha_prior_mean <- ln(2.0)
alpha_prior_sd <- 0.587405
alpha ~ dnLognormal(alpha_prior_mean, alpha_prior_sd)
gamma_rates := fnDiscretizeGamma(alpha, alpha, 4, false)

moves[++mvi] = mvScale(alpha, tune = true, weight = 2)

## DEFINE TREEMODEL ==============
# Tree topology prior
topology ~ dnUniformTopology(taxa) # not assuming an outgroup
moves[++mvi] = mvNNI(topology, weight=5.0)
moves[++mvi] = mvSPR(topology, weight=5.0)

# Branch length prior
for (i in 1:n_branches) {
    bl[i] ~ dnExponential(10.0)
    moves[++mvi] = mvScale(bl[i], tune = true, weight = 2.0)
}

# Invariant sites
# pinvar ~ dnBeta(1,1)
# moves[++mvi] = mvScale(pinvar, lambda=0.1, tune=false, weight=2.0)
# moves[++mvi] = mvSlide(pinvar, delta=10.0, tune=false, weight=2.0)

#TL := sum(bl)
psi := treeAssembly(topology, bl)

## GENERATE MODEL ==============
phyloSeq ~ dnPhyloCTMC(tree=psi, Q=Q, siteRates=gamma_rates,  type="DNA") #pInv=pinvar
#phyloSeq.clamp(concat)
phyloSeq.clamp(data)


## ANAYSIS ==============
print("Initialize model ...")
mymodel = model(psi)

# add monitors
monitors[++mni] = mnModel(filename=stem+".log",printgen=10)
monitors[++mni] = mnFile(psi, filename=stem+".trees", printgen=100)
#monitors[++mni] = mnScreen(TL, printgen=100)

# run the analysis
mymcmc = mcmc(mymodel, moves, monitors) #), nchains = 4) # perhaps try out a mcmcmc with multiple chains?
#mymcmc.burnin(30000, tuningInterval = 200)
mymcmc.run(100000)

# summarize output
treetrace = readTreeTrace(stem+"_gene.trees", treetype="non-clock")
map_tree = mapTree(treetrace,stem+"_gene_map.tre")


# you may want to quit RevBayes now
q()