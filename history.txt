### ANALYZE MULTIPLEXED AMPLICON SEQUENCING DATA FOR PEPEROMIA\\
# IMPORT DATA ==============
stem = "bayes_nonclock"
dir = "/home/junyinglim/Dropbox/Projects/2015/Peperomia"
#data = readDiscreteCharacterData("/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data/pepPhyloRuns/pep_160618/concatAlign_160618_clean.fasta")
coding_dir = "/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data/revbayes/coding/"
noncoding_dir ="/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data/revbayes/noncoding/"
codingFilenames = listFiles(coding_dir)
noncodingFilenames = listFiles(noncoding_dir)
n_coding <- codingFilenames.size()
for (i in 1:n_coding) {
    data[i] = readDiscreteCharacterData( codingFilenames[i] )
}
total_subsets = codingFilenames.size()+noncodingFilenames.size()index = codingFilenames.size()+1:total_subsetsn_noncoding <- noncodingFilenames.size()for (j in 1:n_noncoding) {    i <- index[j]    data[i] = readDiscreteCharacterData( noncodingFilenames[j] )}n_species <- data[1].ntaxa()n_branches <- 2 * n_species - 3taxa <- data[1].taxa()mvi = 0mni = 0#excludedSpecimens = ["PEZ-231_bwa", "PEZ-233_bwa", "PEZ-234_bwa", "PEZ-235_bwa", "PEZ-237_bwa", "PEZ-244_bwa", "PEZ-245_bwa"]## DEFINE SUBSTITUTION MODEL ==============for (i in 1:total_subsets) {    # exchangeability rates for partition i    er_prior[i] <- v(1,1,1,1,1,1)    er[i] ~ dnDirichlet(er_prior[i])    moves[++mvi] = mvSimplexElementScale(er[i], alpha=10, tune=true, weight=3)     # stationary frequencies for partition i    pi_prior[i] <- v(1,1,1,1)    pi[i] ~ dnDirichlet(pi_prior[i])    moves[++mvi] = mvSimplexElementScale(pi[i], alpha=10, tune=true, weight=2)     # rate matrix for partition i    Q[i] := fnGTR(er[i], pi[i]) 
    # +Gamma for partition i
    alpha_prior_mean[i] <- ln(2.0)
    alpha_prior_sd[i] <- 0.587405
    alpha[i] ~ dnLognormal( alpha_prior_mean[i], alpha_prior_sd[i] )
    gamma_rates[i] := fnDiscretizeGamma( alpha[i], alpha[i], 4, false )
    moves[++mvi] = mvScale(alpha[i], tune = true, weight = 1.0)
}
    # the probability of a site being invariable
    # pinvar[i] ~ dnBeta(1,1)
    # moves[++mvi] = mvScale(pinvar[i], lambda=0.1, tune=true, weight=2.0)
    # moves[++mvi] = mvSlide(pinvar[i], delta=0.1, tune=true, weight=2.0)
# Define partition-specific rate multipliers
part_rate_mult ~ dnDirichlet( rep(1.0, total_subsets) )
moves[++mvi] = mvBetaSimplex(part_rate_mult, alpha=1.0, tune=true, weight = total_subsets)
moves[++mvi] = mvDirichletSimplex(part_rate_mult, alpha=1.0, tune=true, weight = 2.0)
part_rate := part_rate_mult * total_subsets
## DEFINE TREEMODEL ==============
# Tree topology prior
outgroup = clade("Piper_kadsura", "PEZ-247_bwa", "PEZ-204_bwa", "PEZ-164_bwa")
topology ~ dnUniformTopology(taxa, outgroup = outgroup) # not assuming an outgroup
moves[++mvi] = mvNNI(topology, weight=5.0)
moves[++mvi] = mvSPR(topology, weight=5.0)
# Branch length prior
for (i in 1:n_branches) {
    bl[i] ~ dnExponential(10.0)
    moves[++mvi] = mvScale(bl[i], lambda = 10, tune = true, weight = 4.0)
}
TL := sum(bl)
psi := treeAssembly(topology, bl)
## GENERATE MODEL ==============
for(i in 1:total_subsets){
    phyloSeq[i] ~ dnPhyloCTMC(tree=psi, Q=Q[i], branchRates=part_rate[i], siteRates=gamma_rates[i], type="DNA")
    phyloSeq[i].clamp(data[i])
}
## ANAYSIS ==============
print("Initialize model ...")
mymodel = model(psi)
# add monitors
monitors[++mni] = mnModel(filename=stem+".log",printgen=10)
monitors[++mni] = mnFile(psi, filename=stem+".trees", printgen=10)
monitors[++mni] = mnScreen(TL, printgen=100)
#monitors[++mni] = mnScreen(TL, printgen=100)
mymcmc = mcmc(mymodel, moves, monitors, nruns = 1) #), nchains = 4) # perhaps try out a mcmcmc with multiple chains?
mymcmc = mcmc(mymodel, moves, monitors, nruns = 1)
mymodel = model(psi)
psi := treeAssembly(topology, bl)
topology
### ANALYZE MULTIPLEXED AMPLICON SEQUENCING DATA FOR PEPEROMIA\\
# IMPORT DATA ==============
stem = "bayes_nonclock"
dir = "/home/junyinglim/Dropbox/Projects/2015/Peperomia"
#data = readDiscreteCharacterData("/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data/pepPhyloRuns/pep_160618/concatAlign_160618_clean.fasta")
coding_dir = "/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data/revbayes/coding/"
noncoding_dir ="/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data/revbayes/noncoding/"
codingFilenames = listFiles(coding_dir)
noncodingFilenames = listFiles(noncoding_dir)
n_coding <- codingFilenames.size()
for (i in 1:n_coding) {
    data[i] = readDiscreteCharacterData( codingFilenames[i] )
}
total_subsets = codingFilenames.size()+noncodingFilenames.size()index = codingFilenames.size()+1:total_subsetsn_noncoding <- noncodingFilenames.size()for (j in 1:n_noncoding) {    i <- index[j]    data[i] = readDiscreteCharacterData( noncodingFilenames[j] )}n_species <- data[1].ntaxa()n_branches <- 2 * n_species - 3taxa <- data[1].taxa()mvi = 0mni = 0#excludedSpecimens = ["PEZ-231_bwa", "PEZ-233_bwa", "PEZ-234_bwa", "PEZ-235_bwa", "PEZ-237_bwa", "PEZ-244_bwa", "PEZ-245_bwa"]## DEFINE SUBSTITUTION MODEL ==============for (i in 1:total_subsets) {    # exchangeability rates for partition i    er_prior[i] <- v(1,1,1,1,1,1)    er[i] ~ dnDirichlet(er_prior[i])    moves[++mvi] = mvSimplexElementScale(er[i], alpha=10, tune=true, weight=3)     # stationary frequencies for partition i    pi_prior[i] <- v(1,1,1,1)    pi[i] ~ dnDirichlet(pi_prior[i])    moves[++mvi] = mvSimplexElementScale(pi[i], alpha=10, tune=true, weight=2)     # rate matrix for partition i    Q[i] := fnGTR(er[i], pi[i]) 
    # +Gamma for partition i
    alpha_prior_mean[i] <- ln(2.0)
    alpha_prior_sd[i] <- 0.587405
    alpha[i] ~ dnLognormal( alpha_prior_mean[i], alpha_prior_sd[i] )
    gamma_rates[i] := fnDiscretizeGamma( alpha[i], alpha[i], 4, false )
    moves[++mvi] = mvScale(alpha[i], tune = true, weight = 1.0)
}
    # the probability of a site being invariable
    # pinvar[i] ~ dnBeta(1,1)
    # moves[++mvi] = mvScale(pinvar[i], lambda=0.1, tune=true, weight=2.0)
    # moves[++mvi] = mvSlide(pinvar[i], delta=0.1, tune=true, weight=2.0)
# Define partition-specific rate multipliers
part_rate_mult ~ dnDirichlet( rep(1.0, total_subsets) )
moves[++mvi] = mvBetaSimplex(part_rate_mult, alpha=1.0, tune=true, weight = total_subsets)
moves[++mvi] = mvDirichletSimplex(part_rate_mult, alpha=1.0, tune=true, weight = 2.0)
part_rate := part_rate_mult * total_subsets
## DEFINE TREEMODEL ==============
# Tree topology prior
outgroup = clade("Piper_kadsura", "PEZ-247_bwa", "PEZ-204_bwa", "PEZ-164_bwa")
topology ~ dnUniformTopology(taxa, outgroup = outgroup) # not assuming an outgroup
moves[++mvi] = mvNNI(topology, weight=5.0)
moves[++mvi] = mvSPR(topology, weight=5.0)
taxa
taxa <- data[1].taxa()
taxa
