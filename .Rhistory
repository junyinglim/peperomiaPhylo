data_dir <- "/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data"
## Extract genes
# Packages
library(phytools)
data_dir <- "/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data"
chloroplast_dir <- file.path(data_dir, "chloroplast_bwa_assembled")
ribosome_dir <- file.path(data_dir, "ribosome_bwa_assembled")
list.files(chloroplast_dir)
chloroplast_files <- list.files(chloroplast_dir)
accessionData <- read.csv("/Users/junyinglim/Dropbox/Projects/2015/Peperomia/peperomiaPhylo/data/PeperomiaAccessionData.csv")
table(accessionData$Geography)
output_dir <- "~/Desktop/pepData"
temp <- read.dna(file.path(chloroplast_data, chloroplast_files[i]))
temp <- read.dna(file.path(chloroplast_dir, chloroplast_files[i]))
chloroplast_files
strsplit(chloroplast_files, split = "_")
library(stringr)
str_split_fixed(chloroplast_files, split = "_", n = 3)
str_split_fixed(chloroplast_files, pattern = "_", n = 2)
str_split_fixed(chloroplast_files, pattern = "_", n = 2)[,1]
chloroplast_id <- str_split_fixed(chloroplast_files, pattern = "_", n = 2)[,1]
i <- 1
temp <- read.dna(file.path(chloroplast_dir, chloroplast_files[i]))
temp <- read.dna(file.path(chloroplast_dir, chloroplast_files[i]), "fasta")
rownames(temp)
accessionData$SampleID
match(chloroplast_id[i], accessionData$SampleID)
accessionData$label <- paste0(accessionData$Genus, accessionData$Species, accessionData$Geography,sep = "_")
accessionData$label
accessionData$label[match(chloroplast_id[i], accessionData$SampleID)]
accessionData$label <- paste(accessionData$Genus, accessionData$Species, accessionData$Geography,sep = "_")
rownames(temp) <- accessionData$label[match(chloroplast_id[i], accessionData$SampleID)]
rownames(temp)
accessionData$label <- paste(accessionData$SampleID, accessionData$Genus, accessionData$Species, accessionData$Geography,sep = "_")
rownames(temp) <- accessionData$label[match(chloroplast_id[i], accessionData$SampleID)]
temp
for(i in 1:length(chloroplast_files)){
temp <- read.dna(file.path(chloroplast_dir, chloroplast_files[i]), "fasta")
rownames(temp) <- accessionData$label[match(chloroplast_id[i], accessionData$SampleID)]
write.dna(temp, file.path(output_dir, chloroplast_files[i]), "fasta")
}
ribosome_files <- list.files(ribosome_dir)
ribosome_id <- str_split_fixed(ribosome_files, pattern = "_", n = 2)[,1]
ribosome_id
for(i in 1:length(chloroplast_files)){
temp <- read.dna(file.path(ribosome_dir, ribosome_files[i]), "fasta")
rownames(temp) <- accessionData$label[match(ribosome_id[i], accessionData$SampleID)]
write.dna(temp, file.path(output_dir, ribosome_files[i]), "fasta")
}
ribosome_dir
## Process habitat data for the Hawaiian flora
# Author: Jun Ying Lim
## PACKAGES
library(ggplot2)
## DIRECTORIES
main.dir <- "~/Dropbox/Projects/2016/BiogeogNicheEvol"
figure.dir <- file.path(main.dir, "island-habitat/figures")
## IMPORT DATA
habitatData <- read.csv(file.path(main.dir, "priceHabitatData.csv", stringsAsFactors = FALSE))
## Process habitat data for the Hawaiian flora
# Author: Jun Ying Lim
## PACKAGES
library(ggplot2)
## DIRECTORIES
main.dir <- "~/Dropbox/Projects/2016/BiogeogNicheEvol"
figure.dir <- file.path(main.dir, "island-habitat/figures")
## IMPORT DATA
habitatData <- read.csv(file.path(main.dir, "priceHabitatData.csv"), stringsAsFactors = FALSE))
range(subset(habitatData, Combo %in% c("HD", "HW", "HM"))$LEL)
range(subset(habitatData, Combo %in% c("LD", "LW", "LM"))$LEL)
habitatData$ElevationGrp <- substr(habitatData$Combo, start = 1, stop = 1)
habitatData$MoistureGrp <- substr(habitatData$Combo, start = 2, stop = 2)
habitatData <- read.csv(file.path(main.dir, "priceHabitatData.csv"), stringsAsFactors = FALSE))
## Process habitat data for the Hawaiian flora
# Author: Jun Ying Lim
## PACKAGES
library(ggplot2)
## DIRECTORIES
main.dir <- "~/Dropbox/Projects/2016/BiogeogNicheEvol"
figure.dir <- file.path(main.dir, "island-habitat/figures")
## IMPORT DATA
habitatData <- read.csv(file.path(main.dir, "priceHabitatData.csv"), stringsAsFactors = FALSE)
main.dir <- "~/Dropbox/Projects/2016/BiogeogNicheEvol/island-habitat/data"
habitatData <- read.csv(file.path(main.dir, "priceHabitatData.csv"), stringsAsFactors = FALSE)
habitatData$LINEAGE[habitatData$GENUS == "Cyrtandra"] <- "Cyrtandra" # turns out all the Hawaiian cyrtandra are a monophyletic group
habitatData$LINEAGE[habitatData$GENUS == "Madiinae"] <- "Silverswords"
habitatData$ElevationGrp <- substr(habitatData$Combo, start = 1, stop = 1)
habitatData$MoistureGrp <- substr(habitatData$Combo, start = 2, stop = 2)
ggplot(data =  subset(habitatData, GENUS == "Pritchardia")) _ geom_bar(aes(MoistureGrp))
ggplot(data =  subset(habitatData, GENUS == "Pritchardia")) + geom_bar(aes(MoistureGrp))
ggplot(data =  subset(habitatData, GENUS == "Pritchardia")) + geom_bar(aes(ElevationGrp))
## processSumac.R
# PACKAGES ================
library(rentrez)
library(stringr)
library(ape)
# DIRECTORIES ================
main.dir <- '/Users/junyinglim/Dropbox/Projects/2016/BiogeogNicheEvol/island-habitat'
sumac.dir <- file.path(main.dir, "sumac_runs")
output.dir <- file.path(main.dir, "fastas")
data.dir <- file.path(main.dir, "data")
lineages.dir <- list.files(sumac.dir)
taxonomicNames <- read.csv(file.path(data.dir, "priceHabitatData.csv"), stringsAsFactors = FALSE)
taxonomicNames$taxonomicName <- paste(taxonomicNames$GENUS, taxonomicNames$SPECIES, sep = " ")
cyrtandra <- read.dna(file.path(sumac.dir, "cyrtandra", "alignments", "supermatrix_concatenated.fasta"), "fasta")
cyrtandra_splist <- subset(taxonomicNames, GENUS == "Cyrtandra")$taxonomicName
cyrtandra_subset <- cyrtandra[rownames(cyrtandra) %in% cyrtandra_splist,]
length(cyrtandra_splist) # 57 species
nrow(cyrtandra_subset) # 39
39/57
pritchardia <- read.dna(file.path(sumac.dir, "pritchardia", "alignments", "supermatrix_concatenated.fasta"), "fasta")
pritchardia_splist <- subset(taxonomicNames, GENUS == "Pritchardia")$taxonomicName
pritchardia_splist
pritchardia_subset <- pritchardia[rownames(pritchardia) %in% pritchardia_splist,]
nrow(pritchardia_subset)
length(pritchardia_splist)
pritchardia_dir <- file.path(sumac.dir, "pritchardia", "alignments")
pritchardia_1 <- read.dna(file.path(pritchardia_dir, "supermatrix_1.fasta"), "fasta")
pritchardia_2 <- read.dna(file.path(pritchardia_dir, "supermatrix_2.fasta"), "fasta")
pritchardia_3 <- read.dna(file.path(pritchardia_dir, "supermatrix_3.fasta"), "fasta")
pritchardia_4 <- read.dna(file.path(pritchardia_dir, "supermatrix_4.fasta"), "fasta")
pritchardia_5 <- read.dna(file.path(pritchardia_dir, "supermatrix_5.fasta"), "fasta")
pritchardia_6 <- read.dna(file.path(pritchardia_dir, "supermatrix_6.fasta"), "fasta")
pritchardia_17 <- read.dna(file.path(pritchardia_dir, "supermatrix_7.fasta"), "fasta")
pritchardia_1 <- read.dna(file.path(pritchardia_dir, "supermatrix_1.fasta"), "fasta")
pritchardia_2 <- read.dna(file.path(pritchardia_dir, "supermatrix_2.fasta"), "fasta")
pritchardia_3 <- read.dna(file.path(pritchardia_dir, "supermatrix_3.fasta"), "fasta")
pritchardia_4 <- read.dna(file.path(pritchardia_dir, "supermatrix_4.fasta"), "fasta")
pritchardia_5 <- read.dna(file.path(pritchardia_dir, "supermatrix_5.fasta"), "fasta")
pritchardia_6 <- read.dna(file.path(pritchardia_dir, "supermatrix_6.fasta"), "fasta")
pritchardia_7 <- read.dna(file.path(pritchardia_dir, "supermatrix_7.fasta"), "fasta")
rownames(pritchardia_1) <- gsub(rownames(pritchardia_1), pattern = " ", replacement = "_")
rownames(pritchardia_2) <- gsub(rownames(pritchardia_2), pattern = " ", replacement = "_")
rownames(pritchardia_3) <- gsub(rownames(pritchardia_3), pattern = " ", replacement = "_")
rownames(pritchardia_4) <- gsub(rownames(pritchardia_4), pattern = " ", replacement = "_")
rownames(pritchardia_5) <- gsub(rownames(pritchardia_5), pattern = " ", replacement = "_")
rownames(pritchardia_6) <- gsub(rownames(pritchardia_6), pattern = " ", replacement = "_")
rownames(pritchardia_7) <- gsub(rownames(pritchardia_7), pattern = " ", replacement = "_")
write.dna(pritchardia_1, file.path(output.dir, "pritchardia_1.fasta"), colsep = "", format = "fasta")
write.dna(pritchardia_2, file.path(output.dir, "pritchardia_2.fasta"), colsep = "", format = "fasta")
write.dna(pritchardia_3, file.path(output.dir, "pritchardia_3.fasta"), colsep = "", format = "fasta")
write.dna(pritchardia_4, file.path(output.dir, "pritchardia_4.fasta"), colsep = "", format = "fasta")
write.dna(pritchardia_5, file.path(output.dir, "pritchardia_5.fasta"), colsep = "", format = "fasta")
write.dna(pritchardia_6, file.path(output.dir, "pritchardia_6.fasta"), colsep = "", format = "fasta")
write.dna(pritchardia_7, file.path(output.dir, "pritchardia_7.fasta"), colsep = "", format = "fasta")
## GENERATE Q MATRIX ================
# To do: Develop a generalized way to populate a matrix like this
nIsland = 4; nHabitat = 2
num_habitat_states = 2^nHabitat - 1 #assuming no null state#
num_island_states = 2^nIsland - 1
num_states_total = num_habitat_states * num_island_states
H <- c("0", "1")
M <- c("0", "1")
O <- c("0", "1")
K <- c("0", "1")
dry <- c("0", "1")
wet <- c("0", "1")
states <- expand.grid(H = H, M = M, O= O, K= K, dry = dry, wet = wet, stringsAsFactors = FALSE)
stateCombinations <- subset(states, !((dry == 0 & wet == 0) | (H == 0 & M == 0 & O == 0 & K == 0))) # remove null combinations
stateCombinationVar <- apply(X = stateCombinations, MARGIN = 1, FUN = function(x){paste(names(x)[which(x == 1)], collapse = "_")}) # create labels
q <- matrix("0", nrow = num_states_total, ncol = num_states_total) # create q matrix
rownames(q) <- colnames(q) <- stateCombinationVar
# Population island transition rates
for(i in 1:num_habitat_states){
n <- (i - 1) * num_island_states
for(j in 1:num_habitat_states){
m <- (j - 1) * num_island_states
if(n == m){
q[n+1, m+3] <- "dispHM"
q[n+1, m+5] <- "dispHO"
q[n+1, m+9] <- "dispHK"
q[n+2, m+3] <- "dispMH"
q[n+2, m+6] <- "dispMO"
q[n+2, m+10] <- "dispMK"
q[n+4, m+5] <- "dispOH"
q[n+4, m+6] <- "dispOM"
q[n+4, m+12] <- "dispOK"
q[n+8, m+9] <- "dispKH"
q[n+8, m+10] <- "dispKM"
q[n+8, m+12] <- "dispKO"
q[n+6, m+7] <- "dispMH+OH"
q[n+12, m+13] <- "dispOH+KH"
q[n+10, m+11] <- "dispMH+KH"
q[n+5, m+7] <- "dispHM+OM"
q[n+9, m+11] <- "dispHM+KM"
q[n+12, m+14] <- "dispOM+KM"
q[n+3, m+7] <- "dispHO+MO"
q[n+9, m+13] <- "dispHO+KO"
q[n+10, m+14] <- "dispMO+KO"
q[n+3, m+11] <- "dispHK+MK"
q[n+5, m+13] <- "dispHK+OK"
q[n+6, m+14] <- "dispMK+OK"
q[n+14, m+15] <- "dispMH+OH+KH" # 234 -> 1234
q[n+13, m+15] <- "dispHM+OM+KM"
q[n+11, m+15] <- "dispHO+MO+KO"
q[n+7, m+15] <- "dispHK+MK+OK"
rowindex <- c(3,5,7,9,11,13,15)
colindex <- c(2,4,6,8,10,12,14)
for(k in 1:length(rowindex)){q[n+rowindex[k], m+colindex[k]] <- "extH"}
rowindex <- c(3,6,7,10,11,14,15)
colindex <- c(1,4,5,8,9,12,13)
for(k in 1:length(rowindex)){q[n+rowindex[k], m+colindex[k]] <- "extM"}
rowindex <- c(5,6,7,12,13,14,15)
colindex <- c(1,2,3,8,9,10,11)
for(k in 1:length(rowindex)){q[n+rowindex[k], m+colindex[k]] <- "extO"}
rowindex <- c(9,10,11,12,13,14,15)
colindex <- c(1,2,3,4,5,6,7)
for(k in 1:length(rowindex)){q[n+rowindex[k], m+colindex[k]] <- "extK"}
}
}
}
# Populate habitat transition rates
for(i in 1:num_habitat_states){
n = (i - 1) * num_island_states
for(j in 1:num_habitat_states){
m = (j - 1) * num_island_states
if(i == 1 & j == 3){
for(k in 1:num_island_states){ q[n+k,m+k]  <- "dispDW" }
}
if(i ==  2 & j == 3){
for(k in 1:num_island_states){ q[n+k,m+k] <- "dispWD"}
}
if(i == 3 & j == 1){
for(k in 1:num_island_states){ q[n+k,m+k] <- "extW"}
}
if(i == 3 & j == 2){
for(k in 1:num_island_states){ q[n+k,m+k] <- "extD"}
}
}
}
## GENERATE CHARACTER STATES FOR LINEAGES ================
taxonomicNames$High <- substr(taxonomicNames$Combo, start = 1, stop = 1)
taxonomicNames$Low <- substr(taxonomicNames$Combo, start = 1, stop = 1)
taxonomicNames$High <- ifelse(taxonomicNames$High %in% c("H", "W"), 1, 0)
taxonomicNames$Low <- ifelse(taxonomicNames$High %in% c("L", "W", "C"), 1, 0)
taxonomicNames$dry <- substr(taxonomicNames$Combo, start = 2, stop = 2)
taxonomicNames$wet <- substr(taxonomicNames$Combo, start = 2, stop = 2)
taxonomicNames$dry <- ifelse(taxonomicNames$dry %in% c("D", "W"), 1, 0)
taxonomicNames$wet <- ifelse(taxonomicNames$wet %in% c("M", "W"), 1, 0)
taxonomicNames$dry[taxonomicNames$Combo == "C"] <- 1 # assuming coastal species are dry for now
write.csv(taxonomicNames, file = file.path(data.dir, "priceHabitatData_clean.csv"))
taxonomicNames$island_habitat <- NA
targetColumns <- c("H", "M", "O", "K", "dry","wet")
for(i in 1:nrow(taxonomicNames)){
index <- which(taxonomicNames[i,targetColumns] == 1)
if(length(index) > 0){
taxonomicNames$island_habitat[i] <- paste(targetColumns[index], collapse = "_")
} else {
taxonomicNames$island_habitat[i] <- ""
}
}
taxonomicNames$island_habitat_category <- match(taxonomicNames$island_habitat, stateCombinationVar)
taxonomicNames$taxonomicNameLabel <- gsub(taxonomicNames$taxonomicName, pattern = " ", replacement = "_")
pritchardia_island_habitat <- subset(taxonomicNames, taxonomicNameLabel %in% rownames(pritchardia))[c("taxonomicNameLabel", "island_habitat_category")]
pritchardia_island_habitat
rownames(pritchardia)
rownames(pritchardia) <- gsub(rownames(pritchardia), pattern = " ", replacement = "_")
pritchardia_island_habitat <- subset(taxonomicNames, taxonomicNameLabel %in% rownames(pritchardia))[c("taxonomicNameLabel", "island_habitat_category")]
pritchardia_island_habitat
write.table(pritchardia_island_habitat, file = file.path(data.dir, "pritchardia_island_habitat.txt"), row.names = FALSE, col.names = FALSE, quote = FALSE, sep = "\t")
## Extract genes
# Packages
library(ape)
data_dir <- "/Users/junyinglim/Dropbox/Projects/2015/Peperomia/data"
assembled_dir <- file.path(data_dir, "chloroplast_bwa_assembled")
output_dir <- file.path(data_dir, "bwa_alignments")
# Extract out from alignments
alignPositions <- read.table(file.path(assembled_dir, "blatOutput.fsl"),
col.names = c("matches", "misMatches", "repMatches", "nCount",
"qNumInsert", "qBaseInsert","tNumInsert","tBaseInsert","strand", "qName", "qSize", "qStart", "qEnd","tName", "tSize", "tStart", "tEnd", "blockCount", "blockSizes", "qStarts", "tStarts"), stringsAsFactors = FALSE)
alignPositions <- subset(alignPositions, strand == "+")
# Read alignment
rawalignment <- read.dna(file.path(assembled_dir, "pep_seq_aligned.fasta"), format = "fasta", as.matrix = TRUE)
# Extract subalignments that map back to gene sequences from the reference
geneNames <- unique(alignPositions$qName)
extractedSeq <- list()
for(i in geneNames){
temp = subset(alignPositions, qName == i)
starts_ends <- vector()
for(j in 1:nrow(temp)){
if(temp$blockCount[j] > 1){
starts <- as.numeric(unlist(strsplit(temp$tStarts, split = ",")))
ends <- starts + as.numeric(unlist(strsplit(temp$blockSizes, split = ",")))
for(k in 1:length(starts)){
starts_ends <- c(starts_ends, starts[k]:ends[k])
}
} else {
starts_ends <- c(starts_ends, temp$tStart[j]:temp$tEnd[j])
}
}
extractedSeq[[i]] <- rawalignment[,starts_ends]
}
# Rename the reference sequence name
for(i in 1:length(extractedSeq)){
rownames(extractedSeq[[i]])[grep(rownames(extractedSeq[[i]]), pattern = "KT223569")] <- "Piper_kadsura"
}
# Export as phylip files
for(i in 1:length(extractedSeq)){
write.dna(extractedSeq[[i]],
file = file.path(output_dir, paste0(names(extractedSeq)[i], "_align.fasta")),
format = "fasta", colsep = "")
}
rlognormal(mean = 1, sd = 0.587405)
rlnorm(mean = 1, sd = 0.587405)
rlnorm(mean = 1, sd = 0.587405, n = 1000)
x <- rlnorm(mean = 1, sd = 0.587405, n = 1000)
exp(x)
mean(exp(x))
mean(log(x))
hist(x)
mean(x)
log(3.17794)
hist(log(x))
mean(log(x))
sd(log(x))
sd(x)
x <- rlnorm(mean = 1, sd = 0.587405, n = 10000)
mean(x)
sd(x)
mean(log(x))
sd(log(x))
sd(x)
quantile(x)
quantile(x, probs = c(0.025, 0.975))
